<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<sv:node sv:name="Cleanup 'permanent' formdata" xmlns:sv="http://www.jcp.org/jcr/sv/1.0">
  <sv:property sv:name="jcr:primaryType" sv:type="Name">
    <sv:value>hipposys:updaterinfo</sv:value>
  </sv:property>
  <sv:property sv:name="hipposys:batchsize" sv:type="Long">
    <sv:value>100</sv:value>
  </sv:property>
  <sv:property sv:name="hipposys:description" sv:type="String">
    <sv:value>Permanently removes formdata! All formdata that matches the query will be deleted. Empty formdatacontainers will be removed.</sv:value>
  </sv:property>
  <sv:property sv:name="hipposys:dryrun" sv:type="Boolean">
    <sv:value>false</sv:value>
  </sv:property>
  <sv:property sv:name="hipposys:query" sv:type="String">
    <sv:value>//formdata/permanent/*//element(*,hst:formdata)[@hst:creationtime&lt;xs:dateTime("2016-06-01T00:00:00.000+02:00")] order by @hst:creationtime descending</sv:value>
  </sv:property>
  <sv:property sv:name="hipposys:script" sv:type="String">
    <sv:value><![CDATA[
/*
 * Copyright 2019 Open Web IT B.V. (https://www.openweb.nl/)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package maintenance

import org.onehippo.repository.update.BaseNodeUpdateVisitor

import javax.jcr.Node
import javax.jcr.RepositoryException

class CleanupPermanentFormdata extends BaseNodeUpdateVisitor {

  boolean doUpdate(Node node) {
    remove(node, 20)
    return true
  }

  private void remove(final Node node, int ancestorsToRemove) throws RepositoryException {
    final Node parent = node.parent
    log.debug "Removed node ${node.path}"
    node.remove()

    if (ancestorsToRemove > 0 && parent != null
      && parent.isNodeType("hst:formdatacontainer") && !"permanent".equals(parent.getName()) && parent.getNodes().getSize() == 0) {
      remove(parent, ancestorsToRemove - 1)
    }
  }

  @Override
  boolean undoUpdate(final Node node) throws RepositoryException, UnsupportedOperationException {
    return false
  }
}
]]></sv:value>
  </sv:property>
  <sv:property sv:name="hipposys:throttle" sv:type="Long">
    <sv:value>1000</sv:value>
  </sv:property>
</sv:node>
